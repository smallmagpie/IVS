2-1
자료형과 변수를 이용해 다양한 자료형에 값을 저장

2-2
자료형과 변수를 선언하는 방법에는 다양한 방법이 존재
1. 자료형 변수명 = 초기값
2. 자료형 변수명;
3. 자료형 변수명 =값, 변수명= 값;
4. 자료형 변수명1, 변수명2 ....;

2-3
실수형 (float 4 byte, double 8byte)
정수형 (int 4byte, long long 8byte) float 쓸 시 정확한 데이터 출력 불가능

float의 경우 예제를 통해 정확한 원하는값이 출력되지 않는 것을 확인
때문에 최근에는 사용을 하지 않음
메모리 용량이 적을 시절 사용 多

3-1
상수는 변하지 않는 수로 const로 선언 후 수정 시도 시, 컴파일 불가 에러 메시지 출력

4-1
서식지정자에는 %d, %f, %.3lf, %c, %s이 있음 
printf는 stdio.h 기본 라이브러리에 탑재된 함수

정수형(4byte)과 정수형(4byte) 사칙 연산 결과는 정수형(4byte)
정수형(4byte)/실수형(8byte) 사칙 연산 결과 실수형(8byte) 출력 
-> 연산시 2가 아닌 2.0을 삽입 or (double)을 num1, num2에 삽입

5-1
scanf는 키보드입력을 받는 함수로 서식지정자를 통해 읽을 형식을 선택 후 변수의 주소값에 받아 값 저장

5-2 
scanf_s 에는 받을 데이터량을 항상 정해주어야함 sizeof함수를 통해 값을 정해줌.
항상 양수 값을 받는 unsigned를 붙여줘 오류 확률을 낮춰줄 수 있음.

삼항연산자 : (조건) ? (조건이 참 일 때의 값) : (조건이 거짓 일 때의 값)

#include <stdbool.h>을 통해 true false 를 끌어냄

result ? "참" : "거짓" 삼항연산

논리연산자 : &&(and), ||(or), !(not)

and 연산 수행시 앞 항이 참이 아니면 뒤를 시행 하지 않음
or 연산 수행 시 앞 항이 참이면 뒤를 시행하지 않음 -> 증감연산을 통해 확인함

비트연산자 : &(and), |(or), ^(XOR; 같으면 0, 다르면 1) 출력값은 0 혹은 1
<< 시프트 시 두 배가됨
>> 시프트 시  반이 됨

대입연산자 : =, +=, -=, /=, *=, %= ...
n1 += n1 + 10
n1 -= n1 - 10


 

